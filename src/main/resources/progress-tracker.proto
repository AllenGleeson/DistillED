syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.distilled.progress";
option java_outer_classname = "ProgressTrackerProto";

package progress;

service ProgressTracker {
  // Client-streaming RPC: client sends multiple progress updates
  rpc UpdateProgress (stream ProgressUpdateRequest) returns (UpdateSummaryResponse);
  rpc GetProgress (ProgressQueryRequest) returns (ProgressResponse);
}

// Message sent from client to server
message ProgressUpdateRequest {
  string student_id = 1;
  string course_id = 2;
  string module_name = 3;
  float progress_percent = 4;
}

// Message sent from server back to client after processing the stream
message UpdateSummaryResponse {
  int32 updates_processed = 1;
  float latest_progress_percent = 2;
  string message = 3;
}

message ProgressQueryRequest {
  string student_id = 1;
  string course_id = 2;
}

message ProgressResponse {
  float percent = 1;
  string message = 2;
}